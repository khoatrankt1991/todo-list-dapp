name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # === SMART CONTRACT JOB ===
  compile-and-test-smart-contracts:
    runs-on: ubuntu-latest
    
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🧰 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 📦 Install dependencies (root)
      run: |
        npm ci
    - name: 🔐 Create .env file for smart contracts
      run: |
        echo "ALCHEMY_KEY=${{ secrets.ALCHEMY_KEY }}" >> .env
        echo "ACCOUNT_PRIVATE_KEY=${{ secrets.ACCOUNT_PRIVATE_KEY }}" >> .env
        echo "LOCALHOST_OX=${{ secrets.LOCALHOST_OX }}" >> .env
        echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env
        echo "POLYGON_SCAN_API_KEY=${{ secrets.POLYGON_SCAN_API_KEY }}" >> .env
    - name: 🛠 Compile smart contracts
      run: npm run compile
      
    - name: 🧪 Run smart contract tests
      run: npm run test

  # === FRONTEND JOB ===
  lint-build-frontend:
    name: 🎨 Lint & Build Frontend
    runs-on: ubuntu-latest
    needs: compile-and-test-smart-contracts

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: 🔍 Run ESLint
        run: |
          cd frontend
          npm run lint

      - name: 🧼 Run Prettier check
        run: |
          cd frontend
          npm run format:check

      - name: 🏗 Run build
        run: |
          cd frontend
          npm run build

      - name: ✅ Run build check
        run: |
          cd frontend
          npm run build:check

  # === DEPLOY JOB ===
  deploy:
    name: 📤 Deploy Frontend to Cloudflare
    runs-on: ubuntu-latest
    needs: lint-build-frontend   # 👈 Make sure ci is passed

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: 🏗 Build frontend
        run: |
          cd frontend
          npm run build
        env:
          NEXT_PUBLIC_WC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WC_PROJECT_ID }}
          NEXT_PUBLIC_CONTRACT_ADDRESS: ${{ secrets.NEXT_PUBLIC_CONTRACT_ADDRESS }}
          NEXT_PUBLIC_CONTRACT_ADDRESS_MONAD: ${{ secrets.NEXT_PUBLIC_CONTRACT_ADDRESS_MONAD }}
          NEXT_PUBLIC_CONTRACT_ADDRESS_POLYGON_AMOY: ${{ secrets.NEXT_PUBLIC_CONTRACT_ADDRESS_POLYGON_AMOY }}
          NEXT_PUBLIC_CONTRACT_ADDRESS_SEPOLIA: ${{ secrets.NEXT_PUBLIC_CONTRACT_ADDRESS_SEPOLIA }}

      - name: 📤 Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: web3-todolist-dapp
          directory: frontend/out